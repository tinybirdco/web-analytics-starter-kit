DESCRIPTION >
	Returns web vitals performance distribution across excellent, good, and poor ranges with average values and percentage of measurements in each category. Shows how measurements are distributed across performance thresholds for each Core Web Vitals metric over the last 24 hours.

TOKEN "dashboard" READ
TOKEN "dashboard_test" READ

NODE metric_categorization
DESCRIPTION >
    Categorize each web vital measurement into excellent, good, or poor ranges

SQL >

    SELECT
        JSONExtractString(payload, 'name') as metric_name,
        JSONExtractFloat(payload, 'value') as value,
        CASE 
            WHEN JSONExtractString(payload, 'name') = 'LCP' THEN
                CASE 
                    WHEN JSONExtractFloat(payload, 'value') <= 2500 THEN 'excellent'
                    WHEN JSONExtractFloat(payload, 'value') <= 4000 THEN 'good'
                    ELSE 'poor'
                END
            WHEN JSONExtractString(payload, 'name') = 'TTFB' THEN
                CASE 
                    WHEN JSONExtractFloat(payload, 'value') <= 500 THEN 'excellent'
                    WHEN JSONExtractFloat(payload, 'value') <= 1000 THEN 'good'
                    ELSE 'poor'
                END
            WHEN JSONExtractString(payload, 'name') = 'FCP' THEN
                CASE 
                    WHEN JSONExtractFloat(payload, 'value') <= 1800 THEN 'excellent'
                    WHEN JSONExtractFloat(payload, 'value') <= 3000 THEN 'good'
                    ELSE 'poor'
                END
            WHEN JSONExtractString(payload, 'name') = 'INP' THEN
                CASE 
                    WHEN JSONExtractFloat(payload, 'value') <= 200 THEN 'excellent'
                    WHEN JSONExtractFloat(payload, 'value') <= 500 THEN 'good'
                    ELSE 'poor'
                END
            WHEN JSONExtractString(payload, 'name') = 'CLS' THEN
                CASE 
                    WHEN JSONExtractFloat(payload, 'value') <= 0.1 THEN 'excellent'
                    WHEN JSONExtractFloat(payload, 'value') <= 0.25 THEN 'good'
                    ELSE 'poor'
                END
            ELSE 'unknown'
        END as performance_category
    FROM analytics_events
    WHERE action = 'web_vital'
        AND JSONExtractString(payload, 'name') IN ('LCP', 'TTFB', 'FCP', 'INP', 'CLS')
        AND timestamp >= now() - interval 24 hour

NODE endpoint
DESCRIPTION >
    Calculate distribution statistics and average values for each metric and performance category

SQL >

    WITH category_stats AS (
        SELECT
            metric_name,
            performance_category,
            round(avg(value), 2) as avg_value,
            count() as measurement_count
        FROM metric_categorization
        WHERE performance_category != 'unknown'
        GROUP BY metric_name, performance_category
    ),
    metric_totals AS (
        SELECT
            metric_name,
            sum(measurement_count) as total_measurements
        FROM category_stats
        GROUP BY metric_name
    )
    SELECT
        cs.metric_name,
        cs.performance_category,
        cs.avg_value,
        cs.measurement_count,
        round((cs.measurement_count * 100.0) / mt.total_measurements, 1) as percentage,
        mt.total_measurements,
        multiIf(
            cs.performance_category = 'excellent', 100,
            cs.performance_category = 'good', 75,
            cs.performance_category = 'poor', 25,
            0
        ) as score,
        multiIf(
            cs.metric_name = 'LCP', 'ms',
            cs.metric_name = 'TTFB', 'ms', 
            cs.metric_name = 'FCP', 'ms',
            cs.metric_name = 'INP', 'ms',
            cs.metric_name = 'CLS', 'score',
            'unknown'
        ) as units,
        multiIf(
            cs.metric_name = 'LCP', 'Excellent: ≤2500ms, Good: ≤4000ms, Poor: >4000ms',
            cs.metric_name = 'TTFB', 'Excellent: ≤500ms, Good: ≤1000ms, Poor: >1000ms',
            cs.metric_name = 'FCP', 'Excellent: ≤1800ms, Good: ≤3000ms, Poor: >3000ms',
            cs.metric_name = 'INP', 'Excellent: ≤200ms, Good: ≤500ms, Poor: >500ms',
            cs.metric_name = 'CLS', 'Excellent: ≤0.1, Good: ≤0.25, Poor: >0.25',
            'Unknown thresholds'
        ) as thresholds,
        multiIf(
            cs.metric_name = 'LCP', 'Largest Contentful Paint - measures loading performance',
            cs.metric_name = 'TTFB', 'Time to First Byte - measures server response time',
            cs.metric_name = 'FCP', 'First Contentful Paint - measures rendering performance',
            cs.metric_name = 'INP', 'Interaction to Next Paint - measures interactivity',
            cs.metric_name = 'CLS', 'Cumulative Layout Shift - measures visual stability',
            'Unknown metric'
        ) as description
    FROM category_stats cs
    JOIN metric_totals mt ON cs.metric_name = mt.metric_name
    ORDER BY 
        cs.metric_name,
        CASE cs.performance_category 
            WHEN 'excellent' THEN 1 
            WHEN 'good' THEN 2 
            WHEN 'poor' THEN 3 
            ELSE 4 
        END

TYPE endpoint